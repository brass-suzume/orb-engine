#pragma once

namespace core
{
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	class TickInfo
	{

	public:
		TickInfo( float dt );

		float GetDeltaTime() const { return m_dt; }

	private:
		float m_dt;
	};


	////////////////////////////////////////////////////////////////////////////////////////////
	//
	using TickFunctor = std::function< void( const TickInfo& tickInfo ) >;


	////////////////////////////////////////////////////////////////////////////////////////////
	//
	enum class TickGroup
	{
		Input = 0,
		Game,
		Physics,
		UI,

		_COUNT
	};


	////////////////////////////////////////////////////////////////////////////////////////////
	//
	class ITickRegister
	{

	public:
		virtual ~ITickRegister() = 0 {}

		virtual void RegisterForTick( TickGroup group, TickFunctor&& functor ) = 0;
	};
}